// SPDX-License-Identifier: MIT
buildscript {
    ext.kotlin_version = '1.5.21'
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "ru.nsu.bobrofon.easysshfs"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 80
        versionName "0.5.9-dev"

        externalNativeBuild {
            cmake {
                targets "ssh", "sshfs"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation "androidx.fragment:fragment-ktx:1.3.6"

    def libsuVersion = '3.1.2'
    // The core module is used by all other components
    implementation "com.github.topjohnwu.libsu:core:${libsuVersion}"
    // Optional: APIs for creating root services
    // implementation "com.github.topjohnwu.libsu:service:${libsuVersion}"
    // Optional: For com.topjohnwu.superuser.io classes
    // implementation "com.github.topjohnwu.libsu:io:${libsuVersion}"
    // Optional: Bundle prebuilt BusyBox binaries
    implementation "com.github.topjohnwu.libsu:busybox:${libsuVersion}"
}
